services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: "-Dmaven.repo.local=.m2"
  MAVEN_IMG: maven:3-jdk-11

cache:
  paths:
    - .m2/

stages:
  - setup
  - test
  - package
  - s3

offline-deps:
  stage: setup
  image: $MAVEN_IMG
  script:
    - '[ "$(($RANDOM%10))" == 0 ] && mvn -B -U dependency:go-offline || mvn -B dependency:go-offline'

test:
  stage: test
  image: $MAVEN_IMG
  script:
    - mvn -B test || true
  artifacts:
    expire_in: 1 week
    paths:
      - target

deploy:maven:
  stage: package
  needs: [ package ]
  image: $MAVEN_IMG
  script:
    - >
      mvn -B -s gitlab-maven-settings.xml -DskipTests -Dmaven.gpg.skip=true 
      -DaltDeploymentRepository=gitlab-maven::default::${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven
      deploy
#  rules:
#    - if: $CI_COMMIT_TAG

package:
  stage: package
  image: $MAVEN_IMG
  script:
    - mvn -B -DskipTests package
    - mvn -B -DaltDeploymentRepository=repo::default::file:./target/staging deploy -DskipTests 
    - cp target/arity-*-fat.jar target/staging/io/cloudonix/arity/*/
  artifacts:
    expire_in: 1 week
    paths:
      - target

s3:
  stage: s3
  script:
    - pip install awscli
    - aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ./target/staging/ s3://cloudonix-dist/maven2/releases
  image: python:3.6.6-stretch
  only:
    - master

s3-snapshots:
  stage: s3
  image:
    name: mesosphere/aws-cli
    entrypoint: [""]
  script:
    - aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ./target/staging/ s3://cloudonix-dist/maven2/snapshots
  only:
    - develop
